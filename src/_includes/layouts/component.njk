---
layout: nav-base
---

{% set tabs = ['API', 'Demos', 'Usage'] %}

<link rel="preload" as="fetch" type="application/json" href="{{ api }}">
<script type="module" src="https://cdn.zywave.com/@zywave/customelement-manifest-element@latest/index.js"></script>
<script type="module" src="{{ "js/web-components/docs-demos.js" | url }}"></script>
{% if not hideToc %}
<script type="module" src="{{ "js/web-components/quick-links.js" | url }}"></script>
{% endif %}
<script type="module" src="{{ "js/web-components/clipboard-copy-icon.js" | url }}"></script>
<script type="module" src="{{ "js/delayed-scroll-to-id.js" | url }}"></script>
<script type="module" src="{{ "js/web-components/docs-do.js" | url }}"></script>
<script type="module" src="{{ "js/web-components/docs-do-not.js" | url }}"></script>
<script type="module" src="{{ "js/web-components/docs-spacer.js" | url }}"></script>
<script type="module" src="{{ "js/web-components/docs-grid.js" | url }}"></script>

<script type="module">
  import {
    getQueryParamValue,
    getTabElementById,
    getIndexPosOfQueryWithinElement,
    hideAllTabContent,
    showApiTabContent,
    getUrlNoHash,
    createClipboardCopyIconElement
  } from '@booster/utils/component-docs-helpers.js';
  import { EventBus } from '@booster/event-bus.js';

  // load <algolia-customelement-manifest-element> code if context is 'Algolia Crawler'
  if (navigator.userAgent.includes('Algolia Crawler')) import('./js/web-components/algolia-customelement-manifest-element.js');

  let titleSuffix = '';
  switch(getQueryParamValue('tab')) {
    case 'usage':
      titleSuffix = ' - Usage';
      if (document.title.includes(titleSuffix)) {
        break;
      }
      document.title += ' - Usage';
      break;
    case 'demos':
      titleSuffix = ' - Demos';
      if (document.title.includes(titleSuffix)) {
        break;
      }
      document.title += ' - Demos';
      break;
    case 'api':
    default:
      titleSuffix = ' - API';
      if (document.title.includes(titleSuffix)) {
        break;
      }
      document.title += ' - API';
      break;
  }

  function init() { // for tabbing, tabs hidden by default, based on query show tab
    const queryParam = 'tab';
    const tabsEl = document.querySelector('zui-tabs');
    if (getQueryParamValue(queryParam)) { // if ?tab=value doesn't match a tab, i.e. ?tab=frenchfries, show and highlight API as selected tab
      if (getIndexPosOfQueryWithinElement(tabsEl, queryParam) === -1) {
        showApiTabContent(tabsEl)
      } else {
        tabsEl.setAttribute('selected', String(getIndexPosOfQueryWithinElement(tabsEl, queryParam)));
        hideAllTabContent();
        const el = document.querySelector(`#${getQueryParamValue(queryParam)}`);
        el?.removeAttribute('style');
        el?.removeAttribute('aria-hidden');
      }
    } else {
      showApiTabContent(tabsEl);
    }

    // usage tab, generate copy to clipboard links, append inside headers
    if (!EventBus.instance.wasCopyToClipboardComponentAddedToDom) {
      const headers = document.querySelectorAll('#usage h1, #usage h2, #usage h3');
      headers.forEach(function (header) {
        header.appendChild(createClipboardCopyIconElement(`${
          getUrlNoHash()
        }#${
          header.id
        }`));
      });
      EventBus.instance.wasCopyToClipboardComponentAddedToDom = true;
    }

    // api tab, apply camelcase attributes to 'customelement-manifest-element', as declarative way is lowercase attribute
    // names
    const manifestEl = document.querySelector('customelement-manifest-element');
    manifestEl.initialElementName = manifestEl.getAttribute('initialelementname');
    manifestEl.elementNames = manifestEl.getAttribute('elementnames');
  }

  document.readyState === 'complete' ? init() : document.addEventListener('readystatechange', () => {
    if (document.readyState === 'complete') {
      init();
    }
  });
</script>

<h1 class="component-header">{{ title }}</h1>
<h2 class="component-subheader">{{ subtitle }}</h2>

<nav class="zui row">
  <zui-tabs selected="-1">
    {% for tab in tabs %}
      <zui-tab id="tab-{{ tab | slug }}">
        <a href="{{ page.url | componentTabHref(tab) | url }}" class="zui text-decoration-none">{{ tab }}</a>
      </zui-tab>
    {% endfor %}
  </zui-tabs>
</nav>
<section id="content" class="zui column align-start">
  <div id="api" style="display: none;" aria-hidden="true">
    {# 'algolia-customelement-manifest-element' WC code is only loaded if context is 'Algolia Crawler' #}
    <algolia-customelement-manifest-element url="{{ api }}"></algolia-customelement-manifest-element>
    <customelement-manifest-element
      src="{{ api }}"
      initialElementName="{{ mainComponentName }}"
      {% if includedElements | length %} 
        elementNames='{{ includedElements | htmlArray }}'
      {% endif %}>
    </customelement-manifest-element>
  </div>
  <div id="demos" class="zui row align-start" style="display: none;" aria-hidden="true">
    <docs-demos demo-url="{{ demo }}" component="{{ mainComponentName }}"></docs-demos>
    {% if not hideToc %}
    <quick-links query="#demos h1, #demos h2, #demos h3, #demos h4"></quick-links>
    {% endif %}
  </div>
  <div id="usage" class="zui row align-start" style="display: none;" aria-hidden="true">
    <div class="documentation">{{ content | safe }}</div>
    {% if not hideToc %}
    <quick-links query="#usage h1, #usage h2, #usage h3, #usage h4"></quick-links>
    {% endif %}
  </div>
</section>